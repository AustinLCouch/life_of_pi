name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Check with clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --verbose

  cross-compile:
    name: Cross Compile for Raspberry Pi
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    
    strategy:
      matrix:
        target: 
          - aarch64-unknown-linux-gnu      # Raspberry Pi 4/5 (64-bit)
          - armv7-unknown-linux-gnueabihf  # Raspberry Pi 2/3/4 (32-bit)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build for ${{ matrix.target }}
      run: cross build --target ${{ matrix.target }} --release

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: life-of-pi-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/life_of_pi
